@using KeplerCMS.Data.Models
@model Containers

@functions
{

    string GenerateClassBasedOnTheme(string theme)
    {
        return theme.Replace("-", " ");
    }

    async Task RenderBody(string text)
    {
        if (text.Contains("{credits}"))
        {
            if (User.Identity.IsAuthenticated)
            {
                <div class="v2box brown darkest">
                    <div class="headline"><h3>@Model.Title</h3></div>
                    <div class="border"><div></div></div>
                    <div class="body">
                        <p>
                            @DbRes.T("body", "credits") <a href="/credits">@DbRes.T("link", "credits")</a>
                        </p>
                        <div class="purse-balance">
                            <span class="lang-creditsMain-purseContentBefore">
                                <font style="vertical-align: inherit;">
                                    <font style="vertical-align: inherit;">@DbRes.T("you_have", "credits") </font>
                                </font>
                            </span>
                            <span class="purse-balance-amount">
                                &nbsp;<span class="habbocredits">@(((Users)ViewData["user"]).Credits)</span>
                            </span>
                            <font style="vertical-align: inherit;">&nbsp;@DbRes.T("coins", "credits")</font>
                        </div>

                        <div id="purse-redeem">
                            <div id="purse-form-container">
                                @DbRes.T("redeem_text", "credits")

                                <form method="post" action="/api/credits/redeem" id="purse-redeem-form">
                                    <input type="text" name="redeem-code" size="34" id="redeem-code">
                                    <input type="hidden" name="doRedeem" value="yes" id="doredeem">
                                    <input type="image" src="~/images/button/arrow_button.gif" class="arrow-button" align="top">
                                </form>
                            </div>
                        </div>
                        <div class="clear"></div>
                    </div>
                    <div class="bottom"><div></div></div>
                </div>
            }
            else
            {
                <div class="v2box brown darkest">
                    <div class="headline"><h3>@Model.Title</h3></div>
                    <div class="border"><div></div></div>
                    <div class="body">
                        <p>
                            @DbRes.T("body", "credits") <a href="/credits">@DbRes.T("link", "credits")</a>
                        </p>


                        <div id="purse-redeem">
                            <div>
                                <div class="content-beige">
                                    <div class="content-beige-body">
                                        @DbRes.T("not_logged_in", "credits")
                                        <div class="clear"></div>
                                    </div>
                                </div>
                                <div class="content-beige-bottom">
                                    <div class="content-beige-bottom-body"></div>
                                </div>
                            </div>
                        </div>
                        <div class="clear"></div>
                    </div>
                    <div class="bottom"><div></div></div>
                </div>
            }
        } else if(text.Contains("{xmas2006}"))
        {
            <partial name="~/Views/Shared/Containers/Xmas2006_Calendar.cshtml" model=Model />
        } else if(text.Contains("{rewards}"))
        {
            <partial name="~/Views/Shared/Containers/Rewards.cshtml" model=Model />
        } else if(text.Contains("{staff}"))
        {
            <partial name="~/Views/Shared/Containers/Staff.cshtml" model=Model />
        } else if(text.Contains("{popular_furni}"))
        {
            <partial name="~/Views/Shared/Containers/PopularFurni.cshtml" model=Model />
        }
        else
        {
            @Html.Raw(Model.Text)
        }
    }

    async Task CreditContent()
    {

        <div class="@GenerateClassBasedOnTheme(Model.Theme)">
            <div class="headline"><h3>@Model.Title</h3></div>
            <div class="border"><div></div></div>
            <div class="body">
                @{ await RenderBody(Model.Text); }
                <div class="clear"></div>
            </div>
            <div class="bottom"><div></div></div>
        </div>
    }

    async Task  V2Box()
    {

        <div class="@GenerateClassBasedOnTheme(Model.Theme)">
            <div class="headline"><h3>@Model.Title</h3></div>
            <div class="border"><div></div></div>
            <div class="body">
                @{ await RenderBody(Model.Text); }
                <div class="clear"></div>
            </div>
            <div class="bottom"><div></div></div>
        </div>
    }

    async Task  V3Box()
    {
        <div class="@GenerateClassBasedOnTheme(Model.Theme)">
            <div class="v3box-top">
                <h3>@Model.Title</h3>
            </div>
            <div class="v3box-content">
                <div class="v3box-body">
                    @{ await RenderBody(Model.Text); }
                    <div class="clear"></div>
                </div>
            </div>
            <div class="v3box-bottom">
                <div></div>
            </div>
        </div>
    }
    async Task MaskBox()
    {
        <div class="@GenerateClassBasedOnTheme(Model.Theme)">
            <div class="headline">
                <div class="headline-inner">
                    <div class="headline-inner-inner">
                        <h3>@Model.Title</h3>
                    </div>
                </div>
            </div>
            <div class="body">
                @{ await RenderBody(Model.Text); }
                <div class="clear"></div>
            </div>
            <div class="bottom">
                <div></div>
            </div>
        </div>
    }

    async Task  NoBox()
    {
        <div class="@GenerateClassBasedOnTheme(Model.Theme)">
            <div class="nobox-content">
                @{ await RenderBody(Model.Text); }
            </div>
        </div>
    }


}

@{
    if (Model.Theme.Contains("v2"))
    {
        await V2Box();
    }
    else if (Model.Theme.Contains("v3"))
    {
        await V3Box();
    }
    else if (Model.Theme.Contains("maskbox"))
    {
        await MaskBox();
    }
    else if (Model.Theme.Contains("nobox"))
    {
        await NoBox();
    }
    else
    {
        <strong>Whups Theme not implemented</strong>
    }
}
